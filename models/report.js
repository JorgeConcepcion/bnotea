var mongoose=require("mongoose");

var reportSchema=new mongoose.Schema({
	author:
		{
			firstName:String,
			lastName:String,
			providerId:String
		},
	recipient:
		{
			firstName:String,
			lastName:String,
			approvalNumber:String,
			medicaidNumber:String
		},
	startDate:String,
	endDate:String,
	schedule:
		[
			{
				date:String,
				timeIn:String,
				timeOut:String
			}
		],
	assistantLog:{
		log:
			[
				{
					setting:String,
					environmentalChange:String,
					participation:String,
					status:String,
					behaviors:[],
					intervention:{
						behavior:String,
						name:String,
						result:String
					},
					replacements:[],
					reinforces:String,
					progress:String
				}
			],
		signatures:{
			assistant:String,
			analyst:String,
			caregiver:String
		},
		state:String
	},
	behavior:[{
		name:String,
		intensity:[[]],
		frequency:[],
		signatures:{
			assistant:String,
			analyst:String,
		},
		state:String
	}],
	replacement:[{
		name:String,
		completion:[[]],
		trials:[],
		signatures:{
			assistant:String,
			analyst:String,
		},
		state:String
	}],
	supervision:{
		date:String,
		duration:Number,
		characteristics:[],
		performance:String,
		signatures:{
			assistant:String,
			analyst:String
		},
		state:String
	},
	medical:{
		medicalVisit:[
			{
				doctor:String,
				reason:String,
				date:String,
			}
		],
		medication:[
			{
				name:String,
				action:String
			}
		],
		signatures:{
			assistant:String,
			caregiver:String
		},
		state:String
	},
	analystLog:{
		log:
			[
				{
					progress:String
				}
			],
		signatures:{
			caregiver:String,
			analyst:String,
		},
		state:String
	},
	caregiver:{
		performance:[],
		date:String,
		signatures:{
			caregiver:String,
			analyst:String,
		},
		state:String
	}

});

module.exports=mongoose.model("Report",reportSchema);